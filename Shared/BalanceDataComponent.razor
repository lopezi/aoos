@using ArweaveAO
@using ArweaveAO.Models
@using ArweaveAO.Models.Token
@using Microsoft.Extensions.Options
@inject HttpClient httpClient
@inject StorageService StorageService

<div class="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
  <span class="bg-gray-100 text-gray-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300">
    @TokenData?.Name
  </span>
  <span class="bg-gray-100 text-gray-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300">
    @BalanceHelper.FormatBalance(Balance?.Balance, TokenData?.Denomination ?? 0)
  </span>
</div>

@code{
    TokenData? TokenData = null;
    BalanceData? Balance = null;

    protected override async Task OnParametersSetAsync()
    {
        var MemValues = await StorageService.GetMemValues();

        TokenClient client = new TokenClient(Options.Create(new ArweaveConfig()), httpClient);

        TokenData = await client.GetTokenMetaData(MemValues.Token);
        Balance = await client.GetBalance(MemValues.Token, MemValues.Address);

        await base.OnParametersSetAsync();
    }
}
